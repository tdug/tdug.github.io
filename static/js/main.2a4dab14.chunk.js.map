{"version":3,"sources":["Components/NavLeft/index.js","Components/Home/index.js","Components/About/Contact/index.js","Components/About/CV/index.js","Components/About/router.js","Components/About/index.js","Components/Root/router.js","Contexts/Theme/index.js","Components/NavTop/index.js","Components/Root/index.js","serviceWorker.js","index.js"],"names":["iOS","process","browser","test","navigator","userAgent","ListItemLink","icon","primary","to","renderLink","React","useMemo","forwardRef","linkProps","ref","button","component","useStyles","makeStyles","list","width","NavLeft","open","setOpen","classes","toggle","opened","event","onOpen","onClose","disableBackdropTransition","disableDiscovery","className","role","onClick","onKeyDown","Home","Typography","variant","Contact","CV","Router","match","exact","path","About","children","Container","ThemeContext","createContext","baseTheme","createMuiTheme","darkBaseTheme","palette","type","ThemeProvider","useState","theme","setTheme","Provider","value","name","getTheme","CssBaseline","root","flexGrow","menuButton","marginRight","title","ThemeToggle","useContext","IconButton","NavTop","openNavLeft","AppBar","position","color","Toolbar","edge","aria-label","Menu","href","target","renderAs","Link","GitHub","paddingTop","Boolean","window","location","hostname","ReactDOM","render","leftNavOpen","setLeftNavOpen","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a4dab14.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  SwipeableDrawer,\n  List,\n  Divider,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport {\n  Description as DescriptionIcon,\n  Home as HomeIcon,\n  Mail as MailIcon,\n} from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst iOS = process.browser && /iP(?:ad|hone|od)/.test(navigator.userAgent);\n\nfunction ListItemLink({ icon, primary, to }) {\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef((linkProps, ref) => (\n        <Link ref={ref} to={to} {...linkProps} />\n      )),\n    [to],\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        <ListItemIcon>{icon}</ListItemIcon>\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  }\n});\n\nexport default function NavLeft({ open, setOpen }) {\n  const classes = useStyles();\n  const toggle = opened => event => {\n    setOpen(opened);\n  }\n  return (\n    <SwipeableDrawer\n      open={open}\n      onOpen={toggle(true)}\n      onClose={toggle(false)}\n      disableBackdropTransition={!iOS}\n      disableDiscovery={iOS}\n    >\n      <div\n        className={classes.list}\n        role=\"presentation\"\n        onClick={toggle(false)}\n        onKeyDown={toggle(false)}\n      >\n        <List>\n          <ListItemLink\n            primary=\"Home\"\n            icon=<HomeIcon />\n            to=\"/\"\n          />\n          <Divider />\n          <ListItemLink\n            primary=\"CV\"\n            icon=<DescriptionIcon />\n            to=\"/about/cv\"\n          />\n          <ListItemLink\n            primary=\"Contact\"\n            icon=<MailIcon />\n            to=\"/about/contact\"\n          />\n        </List>\n      </div>\n    </SwipeableDrawer>\n  )\n}\n","import React from \"react\"\nimport { Typography } from \"@material-ui/core\"\n\nexport default function Home() {\n  return (\n    <>\n      <Typography variant=\"h3\">Welcome to my site!</Typography>\n      <Typography>This site is under construction.</Typography>\n    </>\n  )\n}\n","import React from \"react\"\nimport { Typography } from \"@material-ui/core\"\n\nexport default function Contact() {\n  return (\n    <>\n      <Typography variant=\"h3\">Contact me!</Typography>\n      <Typography>This site is under construction.</Typography>\n    </>\n  )\n}\n","import React from \"react\";\n\nimport {\n  Typography\n} from \"@material-ui/core\";\n\nexport default function CV() {\n  return (\n    <Typography variant=\"h3\">CV</Typography>\n  )\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Contact from \"./Contact\"\nimport CV from \"./CV\"\n\nexport default function Router({match}) {\n  return (\n    <Switch>\n      <Route exact path={`${match.path}/contact`} component={Contact} />\n      <Route exact path={`${match.path}/cv`} component={CV} />\n    </Switch>\n  );\n}\n","import React from \"react\"\nimport Router from \"./router\";\n\nexport default function About({match}) {\n  return (\n    <Router match={match} />\n  )\n}\n","import React from 'react';\nimport { HashRouter as ReactRouter, Route } from \"react-router-dom\";\nimport { Container } from \"@material-ui/core\";\n\nimport Home from \"../Home\";\nimport About from \"../About\"\n\nexport default function Router({children}) {\n  return (\n    <ReactRouter>\n      <Container>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/about\" component={About} />\n        {children}\n      </Container>\n    </ReactRouter>\n  )\n}\n","import React, {createContext, useState } from \"react\";\nimport MuiThemeProvider from \"@material-ui/styles/ThemeProvider\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme } from \"@material-ui/core/styles\"\n\nconst ThemeContext = createContext([{}, () => {}]);\n\nconst baseTheme = createMuiTheme({});\nconst darkBaseTheme = createMuiTheme({palette: {type: 'dark'}});\n\nfunction ThemeProvider({children}) {\n  const [theme, setTheme] = useState(\"dark\");\n\n  const getTheme = name => {\n    switch(name) {\n    case \"dark\":\n      return darkBaseTheme;\n    default:\n      return baseTheme;\n    }\n  }\n\n  return (\n    <ThemeContext.Provider value={[theme, setTheme]}>\n      <MuiThemeProvider theme={getTheme(theme)}>\n        <CssBaseline />\n        {children}\n      </MuiThemeProvider>\n    </ThemeContext.Provider>\n  );\n}\n\nexport {ThemeContext, ThemeProvider};\n","import React, { useContext } from \"react\";\nimport { AppBar, Toolbar, IconButton, Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Menu as MenuIcon,\n  Brightness4 as DarkThemeIcon,\n  Brightness5 as LightThemeIcon,\n  GitHub as GitHubIcon\n} from \"@material-ui/icons\"\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { ThemeContext } from \"../../Contexts/Theme\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: 2\n  },\n  title: {\n    flexGrow: 1\n  }\n});\n\nfunction ThemeToggle() {\n  const [theme, setTheme] = useContext(ThemeContext);\n\n  if (theme === \"base\") {\n    return (\n      <IconButton onClick={() => setTheme(theme => \"dark\")}>\n        <DarkThemeIcon />\n      </IconButton>\n    );\n  } else {\n    return (\n      <IconButton onClick={() => setTheme(theme => \"base\")}>\n        <LightThemeIcon />\n      </IconButton>\n    );\n  }\n}\n\nexport default function NavTop({ openNavLeft }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" color=\"default\">\n        <Toolbar variant=\"dense\">\n          <IconButton\n            className={classes.menuButton}\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={openNavLeft}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            variant=\"h5\"\n            className={classes.title}\n          >\n            tdug\n          </Typography>\n          <ThemeToggle />\n          <IconButton\n            href=\"https://github.com/tdug\"\n            target=\"_blank\"\n            renderAs={Link}\n          >\n            <GitHubIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Router from './router';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { ThemeProvider } from \"../../Contexts/Theme\";\nimport NavTop from \"../NavTop\";\nimport NavLeft from \"../NavLeft\";\n\nconst useStyles = makeStyles({\n  root: {\n    paddingTop: \"50px\"\n  }\n});\n\nexport default function Root() {\n  const classes = useStyles();\n  const [leftNavOpen, setLeftNavOpen] = useState(false);\n  return (\n    <ThemeProvider>\n      <div className={classes.root}>\n        <Router>\n          <NavTop openNavLeft={() => setLeftNavOpen(true)} />\n          <NavLeft open={leftNavOpen} setOpen={setLeftNavOpen} />\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './Components/Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}