{"version":3,"sources":["Components/NavLeft/index.js","Components/Home/index.js","Components/About/Contact/index.js","data/experience.js","Components/About/Experience/index.js","Components/About/router.js","Components/About/index.js","Components/Root/router.js","Contexts/Theme/index.js","Components/NavTop/index.js","Components/Root/index.js","serviceWorker.js","index.js"],"names":["iOS","process","browser","test","navigator","userAgent","ListItemLink","icon","primary","to","renderLink","React","useMemo","forwardRef","linkProps","ref","button","component","useStyles","makeStyles","list","width","NavLeft","open","setOpen","classes","toggle","opened","event","onOpen","onClose","disableBackdropTransition","disableDiscovery","className","role","onClick","onKeyDown","Home","Typography","variant","Link","href","target","color","Contact","IconButton","renderAs","LinkedIn","Mail","experience","work","company","name","url","title","description","tech","languages","frameworks","storage","theme","marginBottom","spacing","padding","textAlign","services","Experience","map","w","Paper","key","Grid","container","item","xs","sm","Public","Divider","join","Router","match","exact","path","About","children","Container","ThemeContext","createContext","baseTheme","createMuiTheme","darkBaseTheme","palette","type","ThemeProvider","useState","setTheme","Provider","value","getTheme","CssBaseline","root","flexGrow","menuButton","marginRight","ThemeToggle","useContext","NavTop","openNavLeft","AppBar","position","Toolbar","edge","aria-label","Menu","GitHub","paddingTop","Boolean","window","location","hostname","ReactDOM","render","leftNavOpen","setLeftNavOpen","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a06b98a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  SwipeableDrawer,\n  List,\n  Divider,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport {\n  Description as DescriptionIcon,\n  Home as HomeIcon,\n  Mail as MailIcon,\n} from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst iOS = process.browser && /iP(?:ad|hone|od)/.test(navigator.userAgent);\n\nfunction ListItemLink({ icon, primary, to }) {\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef((linkProps, ref) => (\n        <Link ref={ref} to={to} {...linkProps} />\n      )),\n    [to],\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        <ListItemIcon>{icon}</ListItemIcon>\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  }\n});\n\nexport default function NavLeft({ open, setOpen }) {\n  const classes = useStyles();\n  const toggle = opened => event => {\n    setOpen(opened);\n  }\n  return (\n    <SwipeableDrawer\n      open={open}\n      onOpen={toggle(true)}\n      onClose={toggle(false)}\n      disableBackdropTransition={!iOS}\n      disableDiscovery={iOS}\n    >\n      <div\n        className={classes.list}\n        role=\"presentation\"\n        onClick={toggle(false)}\n        onKeyDown={toggle(false)}\n      >\n        <List>\n          <ListItemLink\n            primary=\"Home\"\n            icon=<HomeIcon />\n            to=\"/\"\n          />\n          <Divider />\n          <ListItemLink\n            primary=\"Experience\"\n            icon=<DescriptionIcon />\n            to=\"/about/experience\"\n          />\n          <Divider />\n          <ListItemLink\n            primary=\"Contact\"\n            icon=<MailIcon />\n            to=\"/about/contact\"\n          />\n        </List>\n      </div>\n    </SwipeableDrawer>\n  )\n}\n","import React from \"react\"\nimport { Typography, Link } from \"@material-ui/core\"\n\nexport default function Home() {\n  return (\n    <>\n      <Typography variant=\"h3\">Welcome!</Typography>\n      <Typography>\n        This site is built with React.js and Material-UI, and hosted on GitHub pages.\n      </Typography>\n      <br />\n      <Link\n        href=\"https://github.com/tdug/tdug.github.io/tree/development\"\n        target=\"_blank\"\n        color=\"textPrimary\"\n      >\n        View Source\n      </Link>\n    </>\n  )\n}\n","import React from \"react\"\nimport { Typography, IconButton, Link } from \"@material-ui/core\"\nimport {\n  Mail as MailIcon,\n  LinkedIn as LinkedInIcon\n} from \"@material-ui/icons\"\n\nconst email = \"\\\"Code200, LLC\\\"tom.dugovic@gmail.com?subject=Contracting Services\";\nconst li_url = \"https://www.linkedin.com/in/tom-dugovic\";\n\nexport default function Contact() {\n  return (\n    <>\n      <Typography variant=\"h3\">Contact me!</Typography>\n\n      <IconButton\n        href={li_url}\n        target=\"_blank\"\n        renderAs={Link}\n      >\n        <LinkedInIcon />\n      </IconButton>\n      <IconButton\n        href={`mailto:${email}`}\n        renderAs={Link}\n      >\n        <MailIcon />\n      </IconButton>\n    </>\n  )\n}\n","export const experience = {\n  work: [\n    {\n      company: {\n        name: 'PullRequest',\n        url: 'https://www.pullrequest.com'\n      },\n      title: 'Senior Software Engineer / Code Reviewer',\n      description: 'Full-Stack web development in Laravel for core service. Integrating new features and bugfixes. Data migrations and operations. Building APIs and consuming them in React.js on the front-end.',\n      tech: {\n        languages: ['PHP', 'JavaScript', 'HTML', 'CSS', 'SCSS'],\n        frameworks: ['Laravel', 'React.js', 'Bootstrap', 'Material-UI'],\n        storage: ['MySQL', 'Redis']\n      }\n    },\n    {\n      company: {\n        name: 'Homebase',\n        url: 'https://joinhomebase.com'\n      },\n      title: 'Senior Software Engineer',\n      description: \"Full-Stack web development in Ruby on Rails for core service. Integration with external APIs for time card and payroll data. Integration of APIs for mobile applications to use.\",\n      tech: {\n        languages: ['Ruby', 'JavaScript', 'HTML', 'CSS', 'SCSS'],\n        frameworks: ['Ruby on Rails', 'React.js', 'Bootstrap'],\n        storage: ['PostgreSQL', 'Redis', 'Amazon Redshift']\n      }\n    },\n    {\n      company: {\n        name: 'SparkCognition',\n        url: 'https://www.sparkcognition.com'\n      },\n      title: \"Software Engineer\",\n      description: \"Full-stack web development in Django for core service. Building out a SIEM for system administrators to monitor an anti-virus solution.\",\n      tech: {\n        languages: ['Python', 'JavaScript', 'HTML', 'CSS', 'SCSS'],\n        frameworks: ['Django', 'Backbone.js', 'Bootstrap'],\n        storage: ['PostgreSQL', 'SQLite', 'Redis', 'Google Bigtable']\n      }\n    },\n    {\n      company: {\n        name: 'Cars.com',\n        url: 'https://www.cars.com'\n      },\n      title: 'Application Developer',\n      description: \"Full-Stack web development in Ruby on Rails for an SEO-optimized site. Site had ~4M daily auto listings, searchable by multiple parameters including region.\",\n      tech: {\n        languages: ['Ruby', 'JavaScript', 'HTML', 'CSS', 'SCSS'],\n        frameworks: ['Ruby on Rails', 'Backbone.js', 'Bootstrap'],\n        storage: ['MySQL', 'PostgreSQL', 'Redis']\n      },\n    }\n  ]\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { experience } from \"../../../data/experience\";\n\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Divider,\n  Link,\n  IconButton,\n} from \"@material-ui/core\";\n\nimport {\n  Public as PublicIcon\n} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n  work: {\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(1)\n  },\n  company: {\n    textAlign: 'center'\n  },\n  services: {\n    padding: theme.spacing(2),\n    textAlign: 'center'\n  }\n}));\n\nexport default function Experience() {\n  const classes = useStyles();\n  return (\n    <>\n      <Typography variant=\"h3\">Work</Typography>\n      {experience.work.map(w => (\n        <Paper key={w.company.name} className={classes.work}>\n          <Grid container>\n            <Grid item xs={12} sm={3} className={classes.company}>\n              <Typography variant=\"h5\">\n                {w.company.name}\n              </Typography>\n              <IconButton\n                href={w.company.url}\n                target=\"_blank\"\n                renderAs={Link}\n              >\n                <PublicIcon />\n              </IconButton>\n            </Grid>\n            <Grid item xs={12} sm={9}>\n              <Typography variant=\"h5\">{w.title}</Typography>\n              <br />\n              <Typography>{w.description}</Typography>\n              <br />\n              <Divider />\n              <Typography variant=\"small\">Languages: {w.tech.languages.join(' | ')}</Typography>\n              <br />\n              <Typography variant=\"small\">Frameworks: {w.tech.frameworks.join(' | ')}</Typography>\n              <br />\n              <Typography variant=\"small\">Storage: {w.tech.storage.join(' | ')}</Typography>\n            </Grid>\n          </Grid>\n        </Paper>\n      ))}\n      <Paper className={classes.services}>\n        <Typography variant=\"h5\">Contracting Services Also Available</Typography>\n      </Paper>\n    </>\n  )\n}\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Contact from \"./Contact\"\nimport Experience from \"./Experience\"\n\nexport default function Router({match}) {\n  return (\n    <Switch>\n      <Route exact path={`${match.path}/contact`} component={Contact} />\n      <Route exact path={`${match.path}/experience`} component={Experience} />\n    </Switch>\n  );\n}\n","import React from \"react\"\nimport Router from \"./router\";\n\nexport default function About({match}) {\n  return (\n    <Router match={match} />\n  )\n}\n","import React from 'react';\nimport { HashRouter as ReactRouter, Route } from \"react-router-dom\";\nimport { Container } from \"@material-ui/core\";\n\nimport Home from \"../Home\";\nimport About from \"../About\"\n\nexport default function Router({children}) {\n  return (\n    <ReactRouter>\n      <Container>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/about\" component={About} />\n        {children}\n      </Container>\n    </ReactRouter>\n  )\n}\n","import React, {createContext, useState } from \"react\";\nimport MuiThemeProvider from \"@material-ui/styles/ThemeProvider\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme } from \"@material-ui/core/styles\"\n\nconst ThemeContext = createContext([{}, () => {}]);\n\nconst baseTheme = createMuiTheme({});\nconst darkBaseTheme = createMuiTheme({palette: {type: 'dark'}});\n\nfunction ThemeProvider({children}) {\n  const [theme, setTheme] = useState(\"dark\");\n\n  const getTheme = name => {\n    switch(name) {\n    case \"dark\":\n      return darkBaseTheme;\n    default:\n      return baseTheme;\n    }\n  }\n\n  return (\n    <ThemeContext.Provider value={[theme, setTheme]}>\n      <MuiThemeProvider theme={getTheme(theme)}>\n        <CssBaseline />\n        {children}\n      </MuiThemeProvider>\n    </ThemeContext.Provider>\n  );\n}\n\nexport {ThemeContext, ThemeProvider};\n","import React, { useContext } from \"react\";\nimport { AppBar, Toolbar, IconButton, Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Menu as MenuIcon,\n  Brightness4 as DarkThemeIcon,\n  Brightness5 as LightThemeIcon,\n  GitHub as GitHubIcon,\n  LinkedIn as LinkedInIcon\n} from \"@material-ui/icons\"\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { ThemeContext } from \"../../Contexts/Theme\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: 2\n  },\n  title: {\n    flexGrow: 1\n  }\n});\n\nfunction ThemeToggle() {\n  const [theme, setTheme] = useContext(ThemeContext);\n\n  if (theme === \"base\") {\n    return (\n      <IconButton onClick={() => setTheme(theme => \"dark\")}>\n        <DarkThemeIcon />\n      </IconButton>\n    );\n  } else {\n    return (\n      <IconButton onClick={() => setTheme(theme => \"base\")}>\n        <LightThemeIcon />\n      </IconButton>\n    );\n  }\n}\n\nexport default function NavTop({ openNavLeft }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" color=\"default\">\n        <Toolbar>\n          <IconButton\n            className={classes.menuButton}\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={openNavLeft}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            variant=\"h5\"\n            className={classes.title}\n          >\n            tdug\n          </Typography>\n          <ThemeToggle />\n          <IconButton\n            href=\"https://github.com/tdug\"\n            target=\"_blank\"\n            renderAs={Link}\n          >\n            <GitHubIcon />\n          </IconButton>\n          <IconButton\n            href=\"https://www.linkedin.com/in/tom-dugovic/\"\n            target=\"_blank\"\n            renderAs={Link}\n          >\n            <LinkedInIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Router from './router';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { ThemeProvider } from \"../../Contexts/Theme\";\nimport NavTop from \"../NavTop\";\nimport NavLeft from \"../NavLeft\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(10)\n  },\n}));\n\nexport default function Root() {\n  const classes = useStyles();\n  const [leftNavOpen, setLeftNavOpen] = useState(false);\n  return (\n    <ThemeProvider>\n      <div className={classes.root}>\n        <Router>\n          <NavTop openNavLeft={() => setLeftNavOpen(true)} />\n          <NavLeft open={leftNavOpen} setOpen={setLeftNavOpen} />\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './Components/Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}